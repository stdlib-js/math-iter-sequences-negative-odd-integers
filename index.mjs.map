{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 50\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( '0aL2V,FD', options ) );\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( '0aL2t,G9', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport FLOAT64_MAX_SAFE_INTEGER from '@stdlib/constants-float64-max-safe-integer';\nimport validate from './validate.js';\n\n\n// VARIABLES //\n\nvar MAX_ITER = (FLOAT64_MAX_SAFE_INTEGER+1) / 2;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a sequence of negative odd integers.\n*\n* ## Notes\n*\n* -   If an environment supports `Symbol.iterator`, the returned iterator is iterable.\n*\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter=4503599627370496] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterNegativeOddIntegersSeq();\n*\n* var v = iter.next().value;\n* // returns -1\n*\n* v = iter.next().value;\n* // returns -3\n*\n* v = iter.next().value;\n* // returns -5\n*\n* // ...\n*/\nfunction iterNegativeOddIntegersSeq( options ) { // eslint-disable-line id-length\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar i;\n\tvar j;\n\n\topts = {\n\t\t'iter': MAX_ITER\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\ti = 0;\n\tj = 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj -= 2;\n\t\treturn {\n\t\t\t'value': j,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterNegativeOddIntegersSeq( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterNegativeOddIntegersSeq;\n"],"names":["validate","opts","options","isPlainObject","hasOwnProp","iter","isNonNegativeInteger","TypeError","format","MAX_ITER","FLOAT64_MAX_SAFE_INTEGER","iterNegativeOddIntegersSeq","FLG","err","i","j","arguments","length","setReadOnly","next","end","iteratorSymbol","factory","done","value"],"mappings":";;4sBAiDA,SAASA,EAAUC,EAAMC,GACxB,OAAMC,EAAeD,GAGhBE,EAAYF,EAAS,UACzBD,EAAKI,KAAOH,EAAQG,MACdC,EAAsBJ,EAAQG,OAC5B,IAAIE,UAAWC,EAAQ,WAAY,OAAQN,EAAQG,OAGrD,KARC,IAAIE,UAAWC,EAAQ,WAAYN,GAS5C,CC9BA,IAAIO,GAAYC,EAAyB,GAAK,EAgC9C,SAASC,EAA4BT,GACpC,IAAID,EACAI,EACAO,EACAC,EACAC,EACAC,EAKJ,GAHAd,EAAO,CACNI,KAAQI,GAEJO,UAAUC,SACdJ,EAAMb,EAAUC,EAAMC,IAErB,MAAMW,EAeR,OAZAC,EAAI,EACJC,EAAI,EAIJG,EADAb,EAAO,CAAA,EACY,OAAQc,GAC3BD,EAAab,EAAM,SAAUe,GAGxBC,GACJH,EAAab,EAAMgB,EAAgBC,GAE7BjB,EAQP,SAASc,IAER,OADAL,GAAK,EACAF,GAAOE,EAAIb,EAAKI,KACb,CACNkB,MAAQ,GAIH,CACNC,MAFDT,GAAK,EAGJQ,MAAQ,EAET,CASD,SAASH,EAAKI,GAEb,OADAZ,GAAM,EACDI,UAAUC,OACP,CACNO,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASD,IACR,OAAOX,EAA4BV,EACnC,CACF"}